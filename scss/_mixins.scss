
$em-calc-base: 16;
@function emCalc($pxWidth) {
  @return $pxWidth / $em-calc-base * 1em;
}
@function em-calc($values) {
  @return emCalc($values);
}

@mixin placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; } 
}
@mixin flexbox($display:flex) {
    display: -webkit-box;
    display: -moz-box;
    @if $display == (flex or flexbox) {
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
    }
    @else if $display == (inline-flex or inline-flexbox) {
        display: -ms-inline-flexbox;
        display: -webkit-inline-flex;
        display: inline-flex;
    }
}
@mixin flex-direction($direction:row) {
    @if $direction == row {
        -webkit-box-direction: normal;
        -moz-box-direction: normal;
        -webkit-box-orient: horizontal;
        -moz-box-orient: horizontal;
        -webkit-flex-direction: row;
        -ms-flex-direction: row;
        flex-direction: row;
    }
    @else if $direction == row-reverse {
        -webkit-box-direction: reverse;
        -moz-box-direction: reverse;
        -webkit-box-orient: horizontal;
        -moz-box-orient: horizontal;
        -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
        flex-direction: row-reverse;
    }
    @else if $direction == column {
        -webkit-box-direction: normal;
        -moz-box-direction: normal;
        -webkit-box-orient: vertical;
        -moz-box-orient: vertical;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
    }
    @else if $direction == column-reverse {
        -webkit-box-direction: reverse;
        -moz-box-direction: reverse;
        -webkit-box-orient: vertical;
        -moz-box-orient: vertical;
        -webkit-flex-direction: column-reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse;
    }
}
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}
@mixin justify-content($justify:flex-start) {
    @if $justify == (flex-start or start) {
        -webkit-box-pack: start;
        -moz-box-pack: start;
        -webkit-justify-content: flex-start;
        -ms-flex-pack: start;
        justify-content: flex-start;
    }
    @else if $justify == (center or flex-center) {
        -webkit-box-pack: center;
        -moz-box-pack: center;
        -webkit-justify-content: center;
        -ms-flex-pack: center;
        justify-content: center;
    }
    @else if $justify == (flex-end or end) {
        -webkit-box-pack: end;
        -moz-box-pack: end;
        -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
        justify-content: flex-end;
    }
    @else if $justify == (space-between or justify) {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
        justify-content: space-between;
    }
    @else if $justify == (space-around or distribute) {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
        justify-content: space-around;
    }
}
@mixin align-items($align:flex-start) {
    @if $align == (flex-start or start) {
        -webkit-box-align: start;
        -moz-box-align: start;
        -webkit-align-items: flex-start;
        -ms-flex-align: start;
        align-items: flex-start;
    }
    @else if $align == (flex-end or end) {
        -webkit-box-align: end;
        -moz-box-align: end;
        -webkit-align-items: flex-end;
        -ms-flex-align: end;
        align-items: flex-end;
    }
    @else if $align == (center or flex-center) {
        -webkit-box-align: center;
        -moz-box-align: center;
        -webkit-align-items: center;
        -ms-flex-align: center;
        align-items: center;
    }
    @else if $align == baseline {
        -webkit-box-align: baseline;
        -moz-box-align: baseline;
        -webkit-align-items: baseline;
        -ms-flex-align: baseline;
        align-items: baseline;
    }
    @else if $align == stretch {
        -webkit-box-align: stretch;
        -moz-box-align: stretch;
        -webkit-align-items: stretch;
        -ms-flex-align: stretch;
        align-items: stretch;
    }
}
@mixin align-content($align:flex-start) { // THis only has an effect if flex-wrap is set to no-wrap
    @if $align == (flex-start or start) {
        -webkit-align-content: flex-start;
        -ms-flex-line-pack: start;
        align-content: flex-start;
    }
    @if $align == (flex-end or end) {
        -webkit-align-content: flex-end;
        -ms-flex-line-pack: end;
        align-content: flex-end;
    }
    @if $align == (center or flex-center) {
        -webkit-align-content: center;
        -ms-flex-line-pack: center;
        align-content: center;
    }
    @if $align == (space-between or justify) {
        -webkit-align-content: space-between;
        -ms-flex-line-pack: justify;
        align-content: space-between;
    }
    @if $align == (space-around or distribute) {
        -webkit-align-content: space-around;
        -ms-flex-line-pack: distribute;
        align-content: space-around;
    }
    @if $align == (stretch) {
        -webkit-align-content: stretch;
        -ms-flex-line-pack: stretch;
        align-content: stretch;
    }
}
@mixin flexbox-vertical-center() {
    -webkit-box-align: center;
    -moz-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
}
@mixin flexbox-vertical-stretch() {
    -webkit-box-align: stretch;
    -moz-box-align: stretch;
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
}
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}
@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
  -moz-box-ordinal-group: $val;     
  -ms-flex-order: $val;     
  -webkit-order: $val;  
  order: $val;
}
.flex-container {
    @include flexbox();
    // @include flex-direction();
    // @include flex-wrap();
    // @include justify-content();
    // @include align-items();
    // @include align-content();
}
@-moz-document url-prefix() {
    .flex-container {
        width: 100%;
        -moz-box-sizing: border-box;
    }
}
%flex-container-wrap {
    @include flex-wrap(wrap);
}
%flex-container-reverse {
    @include flex-direction(row-reverse);
}
%flex-container-center {
    @include justify-content(center);
}
%flex-container-vertical-center {
    @include align-items(center);
}
%flex-container-vertical-stretch {
    @include align-items(stretch);
}